using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class LevelManager : MonoBehaviour
{
    /*
     int[,] level0 = new int[9, 9]
    {
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 } };
     */

    int[,] level0 = new int[9, 9]
    {
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 3, 3, 3, 3, 0, 3, 3, 3, 3 },
        { 2, 2, 2, 2, 0, 2, 2, 2, 2 },
        { 1, 1, 1, 1, 0, 1, 1, 1, 1 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    int[,] level1 = new int[9, 9]
    {
        { 1, 0, 0, 0, 1, 0, 0, 0, 1 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 5, 5, 5, 0, 0, 0 },
        { 1, 1, 1, 1, 1, 1, 1, 1, 1 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 1, 0, 0, 0, 1, 0, 0, 0, 1 } };

    int[,] level2 = new int[9, 9]
    {
        { 1, 0, 0, 0, 1, 0, 0, 0, 1 },
        { 0, 0, 0, 1, 2, 1, 0, 0, 0 },
        { 0, 0, 1, 0, 3, 0, 1, 0, 0 },
        { 0, 1, 0, 0, 4, 0, 0, 1, 0 },
        { 4, 4, 4, 1, 5, 1, 4, 4, 4 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 1, 0, 0, 0, 1, 0, 0, 0, 1 } };

    int[,] level3 = new int[9, 9]
    {
        { 0, 0, 0, 0, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 3, 3, 3, 0, 0, 0 },
        { 0, 0, 10, 0, 10, 0, 10, 0, 0 },
        { 0, 1, 0, 0, 4, 0, 0, 1, 0 },
        { 0, 4, 4, 5, 5, 5, 4, 4, 0 },
        { 0, 0, 1, 0, 0, 0, 1, 0, 0 },
        { 0, 0, 0, 1, 1, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    int[,] level4 = new int[9, 9]
    {
        { 3, 4, 0, 5, 0, 5, 0, 4, 3 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 5, 0, 0, 10, 0, 0, 5, 0 },
        { 1, 1, 10, 10, 10, 10, 10, 1, 1 },
        { 1, 1, 1, 0, 0, 0, 1, 1, 1 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    int[,] level5 = new int[9, 9]
    {
        { 3, 4, 0, 5, 11, 5, 0, 4, 3 },
        { 0, 10, 0, 0, 11, 0, 0, 10, 0 },
        { 0, 5, 0, 0, 11, 0, 0, 5, 0 },
        { 1, 1, 0, 10, 10, 10, 0, 1, 1 },
        { 1, 1, 1, 0, 10, 0, 1, 1, 1 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    int[,] level6 = new int[9, 9]
    {
        { 0, 0, 0, 0, 6, 0, 0, 0, 0 },
        { 0, 0, 0, 6, 5, 6, 0, 0, 0 },
        { 0, 0, 6, 0, 5, 0, 6, 0, 0 },
        { 0, 6, 0, 11, 5, 11, 0, 6, 0 },
        { 6, 5, 5, 5, 5, 5, 5, 5, 6 },
        { 0, 6, 0, 11, 5, 11, 0, 6, 0 },
        { 0, 0, 6, 0, 5, 0, 6, 0, 0 },
        { 0, 0, 0, 6, 5, 6, 0, 0, 0 },
        { 0, 0, 0, 0, 6, 0, 0, 0, 0 } };

    int[,] level7 = new int[9, 9]
    {
        { 0, 0, 0, 0, 11, 0, 0, 0, 0 },
        { 0, 9, 9, 0, 11, 0, 9, 9, 0 },
        { 9, 1, 1, 9, 8, 9, 1, 1, 9 },
        { 0, 9, 1, 1, 9, 1, 1, 9, 0 },
        { 9, 1, 1, 9, 8, 9, 1, 1, 9 },
        { 0, 9, 9, 0, 11, 0, 9, 9, 0 },
        { 0, 0, 0, 0, 11, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 11, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    int[,] level8 = new int[9, 9]
    {
        { 11, 10, 0, 0, 0, 0, 0, 10, 11 },
        { 10, 0, 5, 5, 5, 5, 5, 0, 10 },
        { 5, 5, 5, 5, 5, 5, 5, 5, 5 },
        { 6, 6, 6, 6, 6, 6, 6, 6, 6 },
        { 10, 0, 0, 0, 0, 0, 0, 0, 10 },
        { 11, 10, 0, 0, 0, 0, 0, 10, 11 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    int[,] level9 = new int[9, 9]
    {
        { 11, 11, 11, 11, 11, 11, 11, 11, 11 },
        { 11, 10, 10, 10, 10, 10, 10, 10, 11 },
        { 11, 10, 10, 10, 10, 10, 10, 10, 11 },
        { 11, 10, 10, 1, 1, 1, 10, 10, 11 },
        { 11, 10, 10, 10, 10, 10, 10, 10, 11 },
        { 11, 10, 10, 10, 10, 10, 10, 10, 11 },
        { 11, 11, 11, 11, 11, 11, 11, 11, 11 },
        { 0, 0, 1, 0, 1, 0, 1, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 0, 0 } };

    public GameObject block;

    public GameObject blöcke;
    public void CreateLevel(int nextLevel)
    {
        switch(nextLevel)
        {
            case 0:
                Level(level0);
                break;
            case 1:
                Level(level1);
                break;
            case 2:
                Level(level2);
                break;
            case 3:
                Level(level3);
                break;
            case 4:
                Level(level4);
                break;
            case 5:
                Level(level5);
                break;
            case 6:
                Level(level6);
                break;
            case 7:
                Level(level7);
                break;
            case 8:
                Level(level8);
                break;
            case 9:
                Level(level9);
                break;
        }
        
    }
    
    /*
     * Adds the blocks to Level based on the LevelData stored in the Array
     */ 
    public void Level(int[,] lvl)
    {
        for (int r = 0; r <= 8; r++)     //row Z
        {   
            for (int s = 0; s <= 8; s++) //colum X
            {
                if (lvl[r, s] > 0) {
                    GameObject blockSpawn = Instantiate(block, new Vector3(-8 + (s * 2), 0, 20 - r), Quaternion.identity);  //Spawn block
                    blockSpawn.transform.parent = blöcke.transform;     //Set Parent of the block
                    blockSpawn.GetComponent<Blocks>().hp = lvl[r, s];   //Set HP of the block
                    blockSpawn.GetComponent<Blocks>().UpdateColor();    //Update Color
                }
            }
        }
    }
}
